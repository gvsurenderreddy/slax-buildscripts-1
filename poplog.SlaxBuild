#!/bin/bash
. /usr/share/slax/slaxbuildlib
SLAX_BUNDLE_NAME="poplog"
SLAX_BUNDLE_VERSION="15.65"
SLAX_BUNDLE_DESCRIPTION="A software development environment for pop11, lisp, prolog and ML"
SLAX_BUNDLE_CATEGORIES="develop"
SLAX_BUNDLES_REQUIRED="tcsh,lesstif,espeak"
SLAX_BUNDLES_REQUIRED_TO_COMPILE_ONLY=""
SLAX_BUNDLE_MAINTAINER_NAME="Will Price"
SLAX_BUNDLE_MAINTAINER_EMAIL="willprice94+slax@gmail.com"

SLAX_BUNDLE_SOURCE_DOWNLOAD[0]="http://www.cs.bham.ac.uk/research/poplog/bham-linux-poplog-v${SLAX_BUNDLE_VERSION}.tar.gz"
SLAX_BUNDLE_SOURCE_DOWNLOAD[1]="http://www.cs.bham.ac.uk/research/projects/poplog/v${SLAX_BUNDLE_VERSION}/INSTALL_BHAM_LINUX_POPLOG"
SLAX_BUNDLE_SOURCE_DOWNLOAD[2]=""

check_variables_for_errors
download_all_sources
extract_all_sources
init_bundle_target_dir
activate_required_bundles
# ----------------- put your actual build code here: ---------------

export usepop="${SLAX_BUNDLE_TARGET}/usr/share/poplog/current-poplog"

# create poplog directories and set permissions
mkdir -p "${SLAX_BUNDLE_TARGET}"/usr/share/poplog/{local/lockfile/locks,v"${SLAX_BUNDLE_VERSION}"/poplocalbin}
chmod -R 755 "${SLAX_BUNDLE_TARGET}/usr/share/poplog"
# copy over source files
cp -r "${SLAX_CURRENT_BUILDSCRIPT_DIR}/v${SLAX_BUNDLE_VERSION}" "${SLAX_BUNDLE_TARGET}/usr/share/poplog/"
# symlink current-poplog dir to package version
cd "${SLAX_BUNDLE_TARGET}/usr/share/poplog"
ln -s v${SLAX_BUNDLE_VERSION} current-poplog

# create poplog.sh executables
cd current-poplog/INSTALL
cat poplog1.sh > ../bin/poplog.sh
echo "poplogroot=/usr/share/poplog/" >> ../bin/poplog.sh
echo "export poplogroot" >> ../bin/poplog.sh
cat poplog2.sh >> ../bin/poplog.sh
chmod 755 ../bin/poplog.sh

# set variables for poplog to be built
source ../pop/com/popenv.sh
PATH="$popsys\:$PATH\:$popcom"
export PATH

# building saved images with motif
cp -p "$usepop/pop/com/mkstartup.bham" "$usepop/pop/com/mkstartup"
cd "$popsys"
./poplink_cmnd.motif.sh motif

# rebuild basepop11 etc
cd "$usepop/INSTALL"
./LINK_USING_NEWPOP motif

mkdir -p "${SLAX_BUNDLE_TARGET}/usr/bin" "${SLAX_BUNDLE_TARGET}/usr/share/man/man1"
ln -s "/usr/share/poplog/current-poplog/bin/poplog.sh" "${SLAX_BUNDLE_TARGET}/usr/bin/poplog"
ln -s "/usr/share/poplog/current-poplog/man/man1/*" "${SLAX_BUNDLE_TARGET}/usr/share/man/man1"

# Finally add the menu entries
cd "${SLAX_BUNDLE_TARGET}"
mkdir -p usr/share/applications/
mkdir -p root/Poplog
cat > usr/share/applications/pop11.desktop << EOF
[Desktop Entry]
Exec=poplog pop11
Name=Poplog Pop11
GenericName=Programming Language: Pop11
Type=Application
Terminal=true
Categories=Development;TextEditor;
EOF

cat > usr/share/applications/xved.desktop << EOF
[Desktop Entry]
Exec=poplog xved
Name=Poplog XVed
GenericName=Text Editor: XVed
Type=Application
Terminal=false
Categories=Development;TextEditor;
EOF

cat > usr/share/applications/ved.desktop << EOF
[Desktop Entry]
Exec=cd /root/Poplog && poplog ved
Name=Poplog Pop11
GenericName=Programming Language
Type=Application
Terminal=true
Categories=Development;
EOF

# rebuild menu entries in KDE menu
kbuildsycoca4
# ----------------- that makes the package install ------------------
#strip_unneeded_objects
create_slax_bundle
